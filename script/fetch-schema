#!/usr/bin/env node
const fs = require('fs');
const path = require('path');

const fetch = require('node-fetch');
const {
  buildClientSchema,
  introspectionQuery,
  printSchema,
} = require('graphql/utilities');
const schemaPath = path.resolve(__dirname, '..', 'graphql', 'schema');

const token = process.env.GITHUB_TOKEN;
if (!token) {
  throw new Error('You must specify a GitHub auth token in GITHUB_TOKEN');
}
const SERVER = 'https://api.github.com/graphql';

// Save JSON of full schema introspection for Babel Relay Plugin to use
fetch(`${SERVER}`, {
  method: 'POST',
  headers: {
    'Accept': 'application/json',
    'Content-Type': 'application/json',
    'Authorization': 'bearer ' + token,
  },
  body: JSON.stringify({query: introspectionQuery}),
}).then(res => res.json()).then(schemaJSON => {
  const graphQLSchema = buildClientSchema(schemaJSON.data);
  fs.writeFileSync(`${schemaPath}.graphql`, printSchema(graphQLSchema));
}).catch(err => console.error(err)); // eslint-disable-line no-console
